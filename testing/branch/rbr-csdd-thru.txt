#-- rbr-csdd-thru.txt
#-- main branch file for Civil Seeming Drivel Dreaming walkthroughs
#
#-- use HHV.PY to verify ha-half
#-- use MCH.PY to verify mistake checking code
#-- use SCT.PY to verify alternate verb solutions
#-- use HCH.PY to verify room/thing homonyms
#--
#--

#NOTE: PRC.PY has a bug where it double-prints the text at the end if the final command fails

files=reg-csdd-thru-min.txt,reg-csdd-thru-all.txt,reg-csdd-thru-reject.txt,reg-csdd-thru-alt-verbs.txt,reg-csdd-thru-guide-gong.txt,reg-csdd-thru-pride-prong.txt,reg-csdd-thru-mistakes.txt,reg-csdd-thru-ha-half.txt,reg-csdd-thru-homonyms.txt,reg-csdd-thru-verbs.txt,reg-csdd-thru-goto.txt,reg-csdd-thru-hints.txt,reg-csdd-thru-hintfull.txt
~	min	t0
~	all	t1
~	rej	t2
~	alt	t3
~	gong	t4
~	prong	t5
~	mis	t6
~	ha	t7
~	hom	t8
~	ver,verbs	t9
~	goto,gt,go	t10
~	hin,hint,hints	t11
~	hf,hfull	t12
#--stable-file: this eventually says that the project is stable, and I shouldn't change the main/minimal file unless I really need to.
#--strict-file: this says that the project requires strict section marking e.g. @all instead of ==t1.

}$REJECT=I couldn't parse that command. You don't need any more than two words long.
}$REJECT2=Your rhyming attempts bring up nothing. Or, if you tried a standard verb--well, Civil Seeming Drivel Dreaming has eliminated a lot of them, so you can focus on the puzzle verbs. VERBS will give a list of useful, non-puzzle-solving verbs.
}$GREENBONUS=The HA HALF button on your Leet Learner lights up green. Very dim, though. Perhaps this is a rhyme you don't strictly need to figure to win.
}$GREENCOREFIRST=The HA HALF button on your Leet Learner lights up green--one of the words you thought must be right.
}$GREENCORE=The HA HALF button on your Leet Learner lights up green.
}$YELLOWBONUS=The HA HALF button on your Leet Learner lights up yellow. Very dim, though. Perhaps this is a rhyme you don't strictly need to figure to win.
}$YELLOWCOREFIRST=The HA HALF button on your Leet Learner lights up yellow--one of the words must work for a future solution.
}$YELLOWCORE=The HA HALF button on your Leet Learner lights up yellow.

}}MAX=28
}}CURMAX=28
}}SCORE=0
}}CURMIN=25
}}CURMINBONUS=0
}}CURMAXBONUS=3
}}MAXBONUS=3

}$SCOS=You have scored a total of {SCORE} out of {MAX} points and need {CURMIN} to win. You have found {CURMIN} of {MAXBONUS} optional points so far.
}$MISSINGONE=1 optional point is no longer available.
}$MISSING={} optional points are no longer available.

## *FILE
## *FORK

TSV:## minimum walkthrough	## walkthrough with all points	## walkthrough with all rejections and THINK	## walkthrough with altverb tests	## walkthrough testing guide gong	## walkthrough testing pride prong	## walkthrough testing all mistakes	## walkthrough testing half-right cases	## walkthrough testing homonyms	## walkthrough testing special verbs	## walkthrough testing GOTO	## walkthrough testing HINTS basic	## walkthrough testing HINTS full

** game: /home/andrew/prt/debug-civil-seeming-drivel-dreaming.z8
** interpreter: /home/andrew/prt/dfrotz -m -w5000 -h25

* main-thru

@all
#testcase-room-names-croots-craving
/^Croots Craving

@!min
>take learner
Taken.

>au 2

@hin
>ll
You scan the area. This will suffice most of the time, though you may wish to LL a thing that doesn't jibe with its rhymes.
You get an interesting reading when it flips to the BRUTES BRAVING SUITS SAVING text. The numbers blink from (0.50, 0.50) to (-0.50, -0.50) and back, as if it's clueless what should have been changed from, or to, what.
Perhaps you will get more meaningful information scanning the blurring blest purring pest.

@ha
#testcase-ha-half-table-of-verb-checks-2-west
>whirring zwest
{$GREENCOREFIRST}
ONE-TIME NOTE
\\
#testcase-ha-half-table-of-verb-checks-2-whirring
>zwhirring west
{$GREENCORE}
!ONE-TIME NOTE
\\
#testcase-ha-half-table-of-verb-checks-1-test
>turing ztest
{$GREENBONUS}
\\
#testcase-ha-half-table-of-verb-checks-1-turing
>zturing test
{$GREENBONUS}

@hin
>ll pest
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (0.50, -0.50.)
!it's really dim
\\
##balance undos
>whirring west
by one point
\\
>ll pest
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.50, -0.50.)
However, it's really dim, as if you don't need to do or think whatever there is to do or think.
\\
>undo
>undo

@!min
>turing test
}}SCORE++
}}CURMIN++

@hin
>ll pest
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (0.50, -0.50.)

@rej
#####################this is just testing for rejects in general
====alphabetize on
#testcase-check-vc-whyve-we-rule-if-player-is-not-in-contrive-country
>whyve we
{$REJECT2}
\\
#testcase-check-vc-trick-tried-rule-if-slick-slide-is-not-fungible
>trick tried
{$REJECT2}
\\
#testcase-check-vc-stow-stall-rule-if-player-is-not-in-woe-wall
>stow stall
{$REJECT2}
\\
#testcase-check-vc-pie-pitch-rule-if-player-is-not-in-sigh-sitch
>pie pitch
{$REJECT2}
\\
#testcase-check-vc-owning-eh-rule-if-player-is-not-in-honing-hey
>owning eh
{$REJECT2}
\\
#testcase-check-vc-oh-all-rule-if-player-is-not-in-woe-wall
>oh all
{$REJECT2}
\\
#testcase-check-vc-mo-maul-rule-if-player-is-not-in-woe-wall
>mo maul
{$REJECT2}
\\
#testcase-check-vc-rick-ride-rule-if-slick-slide-is-off-stage
>rick ride
{$REJECT2}
\\
#testcase-check-vc-let-light-rule-if-player-is-not-in-net-in-the-night
>let light
{$REJECT2}
\\
#testcase-check-vc-lie-lich-rule-if-player-is-not-in-sigh-sitch
>lie lich
{$REJECT2}
\\
#testcase-check-vc-ivy-rule-if-player-is-not-in-contrive-country
>ivy
{$REJECT2}
\\
#testcase-check-vc-foil-fink-rule-if-player-is-not-in-oil-inc
>foil fink
{$REJECT2}
\\
#testcase-check-vc-core-kit-rule-if-player-is-not-in-forfeit-bore-bit
>core kit
{$REJECT2}
\\
#testcase-check-vc-foe-fall-rule-if-player-is-not-in-woe-wall
>foe fall
{$REJECT2}
\\
#testcase-check-vc-bro-brawl-rule-if-player-is-not-in-woe-wall
>bro brawl
{$REJECT2}
\\
#testcase-check-vc-cloning-clay-rule-if-player-is-not-in-honing-hey
>cloning clay
{$REJECT2}
\\
#testcase-check-vc-lively-rule-if-player-is-not-in-contrive-country
>lively
{$REJECT2}
\\
#testcase-check-vc-thrive-three-rule-if-player-is-not-in-contrive-country
>thrive three
{$REJECT2}
\\
#testcase-check-vc-jive-gee-rule-if-player-is-not-in-contrive-country
>jive gee
{$REJECT2}
\\
#testcase-check-vc-yo-yall-rule-if-player-is-not-in-woe-wall
>yo yall
{$REJECT2}

@all,rej
{--rej}#testcase-check-vc-turing-test-rule-fallthrough
{--all}#testcase-run-vr-turing-test-rule-default
The purring pest disappears with a pop.

@rej
#testcase-check-vc-turing-test-rule-if-pest-is-moot
>turing test
You perform a Turing Test on yourself, since nobody else is around. You hope you passed, but then again, maybe the only reason you passed is because you aren't sentient enough to detect fake sentience.

>whirring west
by one point

@hin
>ll pest
Your rhyming attempts bring up nothing.

>w

@all
#testcase-room-names-woe-wall
/^Woe Wall$

@all,rej
{--rej}#testcase-check-vc-whirring-west-rule-fallthrough
{--all}#testcase-run-vr-whirring-west-rule-default
You follow the noise and tumble down to...

@rej
#####################this is just testing general rejects that would succeed in croots craving
====alphabetize on
#testcase-check-vc-turing-test-rule-unless-player-is-in-croots-craving
>turing test
{$REJECT2}
\\
#testcase-check-vc-whirring-west-rule-unless-player-is-in-croots-craving
>whirring west
{$REJECT2}
\\
#testcase-check-vc-owning-eh-rule-if-player-is-not-in-honing-hey
>owing eh
{$REJECT2}

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.00, 0.00.)

@hom
>whoah
WRONG

@rej
>stow stall
Perhaps there is one buried beyond the wall, but you have nobody to help you look for it.
\\
#testcase-think-table-of-verb-checks-vc-stow-stall-rule
>think
You can find the STOW STALL once you've met people familiar with the area.

@ha
#testcase-ha-half-table-of-verb-checks-3-yall
>yo zyall
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-3-yo
>zyo yall
{$GREENCORE}

>yo yall
by one point

@rej
#+testcase-think-table-of-verb-checks-vc-stow-stall-rule
>think
You can find the STOW STALL now you've met people familiar with the area.

@all
#testcase-run-vr-yo-yall-rule-default
Some people pop out from behind the Woe Wall. Po' Paul, their leader, introduces himself to you.

@rej
#testcase-check-vc-yo-yall-rule-fallthrough
#testcase-check-vc-yo-yall-rule-if-sco-yo-yall-is-true
>yo yall
You already made contact behind the wall.

@ha
#testcase-ha-half-table-of-verb-checks-4-stall
>stow zstall
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-4-stow
>zstow stall
{$GREENCORE}

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (1.00, 1.00.)

>stow stall
by one point

@all,rej
{--rej}#testcase-check-vc-stow-stall-rule-fallthrough
WRONG

@hin
>ll
The leet learner makes a weird noise, as if it's about to find something, but then it doesn't. Maybe there's something to do here a bit later.
\\
>ll slide
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (0.00, 0.00.)

@rej
>bro brawl
WRONG
\\
>foe fall
WRONG
\\
>mo maul
WRONG
\\
>oh all
WRONG
\\
#testcase-think-table-of-verb-checks-vc-bro-brawl-rule
>think
You can cry BRO BRAWL once combat is underway.
You can cry FOE FALL once combat is underway.
You can cry MO MAUL once combat is underway.
You can cry OH ALL once you have full leadership skills.

@all
#testcase-run-vr-stow-stall-rule-default
With the help of Po' Paul, you uncover an area with emergency supplies. It includes ... a slick slide!

@rej
#testcase-check-vc-rick-ride-rule-default
>rick ride
That would be a great way to get back, once you've found a way down the slick slide.
\\
#testcase-check-vc-prick-pride-rule-default
>prick pride
The slide is so slippery, you can't even get on it to go down it. You'll need to fix that first.
\\
#testcase-check-vc-sick-side-rule-default
>sick side
The slide is so slippery, you can't even get on it to go down it. You'll need to fix that first.
\\
#testcase-check-vc-hick-hide-rule-default
>hick hide
The slide is so slippery, you can't even get on it to go down it. You'll need to fix that first.
\\
#testcase-check-vc-tick-tide-rule-default
>tick tide
The slide is so slippery, you can't even get on it to go down it. You'll need to fix that first.
\\
#testcase-think-table-of-verb-checks-vc-hick-hide-rule
#testcase-think-table-of-verb-checks-vc-prick-pride-rule
#testcase-think-table-of-verb-checks-vc-rick-ride-rule
#testcase-think-table-of-verb-checks-vc-sick-side-rule
#testcase-think-table-of-verb-checks-vc-tick-tide-rule
>think
You can HICK HIDE once you've made the slick slide navigable.
You can PRICK PRIDE once you've made the slick slide navigable.
You can take a RICK RIDE once you've taken a trip on the slick slide.
You can SICK SIDE once you've made the slick slide navigable.
You can TICK TIDE once you've made the slick slide navigable.

@ha
#testcase-ha-half-table-of-verb-checks-5-trick
>ztrick tried
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-5-tried
>trick ztried
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-6-hick
>zhick hide
{$YELLOWCOREFIRST}
\\
#testcase-ha-half-table-of-verb-checks-6-hide-hied
>hick zhide
{$YELLOWCORE}
\\
#testcase-ha-half-table-of-verb-checks-7-prick
>zprick pride
{$YELLOWCORE}
\\
#testcase-ha-half-table-of-verb-checks-7-pride
>prick zpride
{$YELLOWCORE}
\\
#testcase-ha-half-table-of-verb-checks-8-sick
>zsick side
{$YELLOWCORE}
\\
#testcase-ha-half-table-of-verb-checks-8-side
>sick zside
{$YELLOWCORE}
\\
#testcase-ha-half-table-of-verb-checks-9-tick
>ztick tide
{$YELLOWCORE}
\\
#testcase-ha-half-table-of-verb-checks-9-tide-tied
>tick ztied
{$YELLOWCORE}
\\
#testcase-ha-half-table-of-verb-checks-10-rick
>zrick ride
{$YELLOWCORE}
\\
#testcase-ha-half-table-of-verb-checks-10-ride
>rick zride
{$YELLOWCORE}

>trick tried
by one point

@hin
>ll slide
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-0.75, -0.75.)

@all,rej
{--rej}#testcase-check-vc-trick-tried-rule-fallthrough
{--all}#testcase-run-vr-trick-tried-rule-default
Aha! You see what was wrong with the slick slide. You see what to do. It's so tricky, I can't even describe it to you, but since you did it, you have a pretty good idea. Right?

@rej
#+testcase-think-table-of-verb-checks-vc-hick-hide-rule
#+testcase-think-table-of-verb-checks-vc-prick-pride-rule
#+testcase-think-table-of-verb-checks-vc-rick-ride-rule
#+testcase-think-table-of-verb-checks-vc-sick-side-rule
#+testcase-think-table-of-verb-checks-vc-tick-tide-rule
>think
You can HICK HIDE now you've made the slick slide navigable.
You can PRICK PRIDE now you've made the slick slide navigable.
You can SICK SIDE now you've made the slick slide navigable.
You can TICK TIDE now you've made the slick slide navigable.

>tick tide
by one point

@all
#testcase-room-names-honing-hey-groaning-grey
/^Honing \(Hey\) Groaning, Grey$

@all,rej
{--rej}#testcase-check-vc-tick-tide-rule-fallthrough
{--all}#testcase-run-vr-tick-tide-rule-default
You slide down somewhere ... there's a lot of complaining about all the bugs around. You can't see them, but there are two prime suspects.

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.00, -1.50.)
\\
>ll moaning mae
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.00, -1.00.)
\\
>ll droning dre
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.00, -1.00.)

@rej
>cloning clay
WRONG
\\
#testcase-think-table-of-verb-checks-vc-cloning-clay-rule
>think
You can summon CLONING CLAY once
are more worth cloning.

@ha
#testcase-ha-half-table-of-verb-checks-13-eh
>owning zeh
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-13-owning
>zowning eh
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-14-clay
>cloning zclay
{$YELLOWCORE}
\\
#testcase-ha-half-table-of-verb-checks-14-cloning
>zcloning clay
{$YELLOWCORE}

>owning eh
by one point

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (0.00, 0.50.)
\\
>ll moaning mae
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (0.00, 1.00.)
\\
>ll droning dre
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (0.00, 1.00.)

@rej
#+testcase-think-table-of-verb-checks-vc-cloning-clay-rule
>think
You can summon CLONING CLAY now
are more worth cloning.

@all
{--rej}#testcase-check-vc-owning-eh-rule-fallthrough
{--all}#testcase-run-vr-owning-eh-rule-default
BZZT Change This

@rej
#testcase-check-vc-owning-eh-rule-if-sco-owning-eh-is-true
>owning eh
You don't need to rub 
past behavior in. They're ready to become better people.

>cloning clay
by one point

@all,rej
{--rej}#testcase-check-vc-cloning-clay-rule-fallthrough
{--all}#testcase-run-vr-cloning-clay-rule-default
/You discover some cloning clay, and (Moaning Mae and Droning Dre|Droning Dre and Moaning Mae) spend time pouring their life essence into thousands of tiny golems\. You watch as they both fade, their spirits no longer tormented\. Your work here is done\.

@rej
#testcase-check-vc-owning-eh-rule-if-sco-cloning-clay-is-true
>owning eh
You take time to reflect on your own faults.

@hin
#this will be slightly different from the others.
>ll
Nothing comes up. The general area here has been changed enough.
\\
>ll slide
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.00, -1.00.)

>rick ride
by one point

@rej
#+testcase-think-table-of-verb-checks-vc-rick-ride-rule
>think
You can take a RICK RIDE now you've taken a trip on the slick slide.

@all
Woe Wall

@hin
>ll slide
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-0.66, -0.66.)

>hick hide
by one point

@all
#testcase-room-names-five-fee-contrive-country
/^Five-Fee-Contrive Country$

@all,rej
{--rej}#testcase-check-vc-hick-hide-rule-fallthrough
{--all}#testcase-run-vr-hick-hide-rule-default
You dream of elitists who look down on rural types as you take the slick slide. And what do you know? You find one, at the end!
WRONG

@rej
>thrive three
WRONG
\\
#testcase-think-table-of-verb-checks-vc-thrive-three-rule
>think
You can summon the THRIVE THREE once Five-Fee-Contrive Country thrives three ways.

@ha
#testcase-ha-half-table-of-verb-checks-16-gee
>jive zgee
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-16-jive
>zjive gee
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-18-three
>thrive zthree
{$YELLOWCORE}
\\
#testcase-ha-half-table-of-verb-checks-18-thrive
>zthrive three
{$YELLOWCORE}
\\
#testcase-ha-half-table-of-verb-checks-19-we
>whyve zwe
{$YELLOWCORE}
\\
#testcase-ha-half-table-of-verb-checks-19-whyve
>zwhyve we
{$YELLOWCORE}

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-2.66, -3.00.)
\\
>ll clive klee
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.66, -2.00.)

>ivy
by one point

@all,rej
{--rej}#testcase-check-vc-ivy-rule-fallthrough
{--all}#testcase-run-vr-ivy-rule-default
Five-Fee-Contrive Country is now filled with vegetation!

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-2.00, -2.50.)
\\
>ll clive klee
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.00, -1.50.)

>lively
by one point

@all,rej
{--rej}#testcase-check-vc-lively-rule-fallthrough
{--all}#testcase-run-vr-lively-rule-default
Five-Fee-Contrive Country now seems more populated.

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-2.00, -2.00.)
!You must supply a noun
\\
>ll clive klee
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.00, -1.00.)

>jive gee
by one point

@all,rej
{--rej}#testcase-check-vc-jive-gee-rule-fallthrough
{--all}#testcase-run-vr-jive-gee-rule-default
The air feels laden with possibilities for friendly wisecracking.

@rej
#testcase-think-table-of-verb-checks-vc-whyve-we-rule
#+testcase-think-table-of-verb-checks-vc-thrive-three-rule
>think
You can say WHYVE WE once you have allies to outnumber Clive Klee.
You can summon the THRIVE THREE now Five-Fee-Contrive Country thrives three ways.

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (0.00, 0.00.)
\\
>ll clive klee
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (1.00, 1.00.)

>thrive three
by one point

@rej
#+testcase-think-table-of-verb-checks-vc-whyve-we-rule
>think
You can say WHYVE WE now you have allies to outnumber Clive Klee.

@all,rej
{--rej}#testcase-check-vc-thrive-three-rule-fallthrough
{--all}#testcase-run-vr-thrive-three-rule-default
BZZT Change This

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.00, -3.00.)
\\
>ll clive klee
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (0.00, -2.00.)

>whyve we
by one point

@all,rej
{--rej}#testcase-check-vc-whyve-we-rule-fallthrough
{--all}#testcase-run-vr-whyve-we-rule-default
Your questioning, with the Thrive Three's backing, drives Clive Klee over the edge. He doesn't recognize the place he's built! It's populated by, well, better people.

>rick ride
!by one point

@all
Woe Wall

@hin
>ll slide
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-0.50, -0.50.)

>sick side
by one point

@all
#testcase-room-names-oil-inc
/^Oil, Inc\.$

@all,rej
{--rej}#testcase-check-vc-sick-side-rule-fallthrough
{--all}#testcase-run-vr-sick-side-rule-default
You're ready to help out with the effects of the petrochemical industry on health, or something.

@ha
#testcase-ha-half-table-of-verb-checks-20-brink
>broil zbrink
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-20-broil
>zbroil brink
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-21-link
>loyal zlink
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-21-loyal
>zloyal link
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-22-rink
>royal zrink
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-22-royal
>zroyal rink
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-23-sink
>soil zsink
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-23-soil
>zsoil sink
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-24-fink
>foil zfink
{$YELLOWCORE}
\\
#testcase-ha-half-table-of-verb-checks-24-foil
>zfoil fink
{$YELLOWCORE}

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (1.75, 1.25.)
\\
>ll moil mink
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (0.75, 0.25.)

@rej
>foil fink
WRONG
\\
#testcase-think-table-of-verb-checks-vc-foil-fink-rule
>think
You can FOIL FINK once enough is in place to depose Oil, Inc.

>royal rink
by one point

@all,rej
{--rej}#testcase-check-vc-royal-rink-rule-fallthrough
WRONG

@all
#testcase-run-vr-royal-rink-rule-default
BZZT Change This

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (1.66, 1.33.)
\\
>ll moil mink
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (0.66, 0.33.)

>soil sink
by one point

@all,rej
{--rej}#testcase-check-vc-soil-sink-rule-fallthrough
WRONG

@all
#testcase-run-vr-soil-sink-rule-default
BZZT Change This

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (2.00, 1.50.)
\\
>ll moil mink
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (1.00, 0.50.)

>broil brink
by one point

@all,rej
{--rej}#testcase-check-vc-broil-brink-rule-fallthrough
WRONG

@all
#testcase-run-vr-broil-brink-rule-default
<now sco-broil-brink is true;>
BZZT Change This

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (2.00, 1.00.)
\\
>ll moil mink
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (1.00, 0.00.)

>loyal link
by one point

@all,rej
{--rej}#testcase-check-vc-loyal-link-rule-fallthrough
WRONG

@all
#testcase-run-vr-loyal-link-rule-default
BZZT Change This

@rej
#+testcase-think-table-of-verb-checks-vc-foil-fink-rule
>think
You can FOIL FINK now enough is in place to depose Oil, Inc.

@ha
#+testcase-ha-half-table-of-verb-checks-24-fink
>foil zfink
{$GREENCORE}
\\
#+testcase-ha-half-table-of-verb-checks-24-foil
>zfoil fink
{$GREENCORE}

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (1.00, 1.00.)
\\
>ll moil mink
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (0.00, 0.00.)

>foil fink
by one point

@all,rej
{--rej}#testcase-check-vc-foil-fink-rule-fallthrough
{--all}#testcase-run-vr-foil-fink-rule-default
BZZT Change This

>rick ride

>prick pride
by one point

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.00, -1.00.)
\\
>ll witch
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (1.00, -0.50.)
\\
>ll slide
DEBUG: can't see any such thing error.

@all
#testcase-room-names-sigh-sitch
/^\(Sigh\) Sitch$

@all,rej
{--rej}#testcase-check-vc-prick-pride-rule-fallthrough
{--all}#testcase-run-vr-prick-pride-rule-default
You're ready to help someone burst someone else's bubble, or perhaps help them gently burst their own.

@rej
>pie pitch
WRONG
\\
#testcase-think-table-of-verb-checks-vc-pie-pitch-rule
>think
You can ask for a PIE PITCH once there's someone or something evil as a target.

@ha
#testcase-ha-half-table-of-verb-checks-11-lich
>lie zlich
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-11-lie
>zlie lich
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-12-pie
>zpie pitch
{$YELLOWCORE}
\\
#testcase-ha-half-table-of-verb-checks-12-pitch
>pie zpitch
{$YELLOWCORE}

>lie lich
by one point

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.00, 0.00.)
\\
>ll witch
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (1.00, 0.50.)
\\
>ll lich
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (0.00, 1.00.)

@rej
#+testcase-think-table-of-verb-checks-vc-pie-pitch-rule
>think
You can ask for a PIE PITCH now there's someone or something evil as a target.

@all,rej
{--rej}#testcase-check-vc-lie-lich-rule-fallthrough
{--all}#testcase-run-vr-lie-lich-rule-default
A vicious lie lich appears! It rattles off all sorts of lies. The tricky ones seem somewhat true. You believe it, though, when it says the most powerful spells can't disarm it. Now you're in for it!

>pie pitch
by one point

@all,rej
{--rej}#testcase-check-vc-pie-pitch-rule-fallthrough
{--all}#testcase-run-vr-pie-pitch-rule-default
Ha-ha! You think for a minute and realize that while powerful spells can't affect the lich, silly ones can. And this one does. Quick consultations with the witch lead to a decisive fight. The lich dissolves in a stream of wailing.

>rick ride
!by one point

@all,rej
{--rej}#testcase-check-vc-rick-ride-rule-fallthrough
{--all}#testcase-run-vr-rick-ride-rule-default
You take the rick ride back to Woe Wall...

@hin
>ll slide
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (0.00, 0.00.)

@all
Woe Wall

@rej
#+testcase-think-table-of-verb-checks-vc-bro-brawl-rule
#+testcase-think-table-of-verb-checks-vc-foe-fall-rule
#+testcase-think-table-of-verb-checks-vc-mo-maul-rule
>think
You can cry BRO BRAWL now combat is underway.
You can cry FOE FALL now combat is underway.
You can cry MO MAUL now combat is underway.

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-0.33, 0.33.)

@alt
>bro brawl
by one point
Forfeit, Bore
\\
>undo
\\
>mo maul
by one point
Forfeit, Bore
\\
>undo

@ha
#testcase-ha-half-table-of-verb-checks-25-fall
>foe zfall
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-25-foe
>zfoe fall
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-26-maul
>mo zmaul
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-26-mo
>zmo maul
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-27-brawl
>bro zbrawl
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-27-bro
>zbro brawl
{$GREENCORE}

>foe fall
by one point

@all,rej
{--rej}#testcase-check-vc-foe-fall-rule-fallthrough
WRONG

@all
#testcase-room-names-forfeit-bore-bit
/^"Forfeit, Bore" Bit$
\\
#testcase-run-vr-foe-fall-rule-default
BZZT Change This

@rej
#testcase-check-vc-rick-ride-rule-if-player-is-in-forfeit-or-player-is-in-net-in-the-night
>rick ride
You're beyond the rick's help here. You must find a way out on your own.

@ha
#testcase-ha-half-table-of-verb-checks-29-core
>zcore kit
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-29-kit
>core zkit
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-30-war
>zwar wit
{$YELLOWCORE}
\\
#testcase-ha-half-table-of-verb-checks-30-wit
>war zwit
{$YELLOWCORE}

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (0.50, -0.50.)

>core kit
by one point

@all
#+testcase-room-names-forfeit-bore-bit
/^Pore Pit$

@all,rej
{--rej}#testcase-check-vc-core-kit-rule-fallthrough
{--all}#testcase-run-vr-core-kit-rule-default
You discover a core kit somewhere in the darkness here. It contains a book of affirmations, some soldier toys to plan strategies and also tools you can use to climb up to somewhere less awful. So you do. But you drop the book in the process. Pity. Some of the ideas would've made you a lot more content once you woke up. That's life!

@rej
>war wit
WRONG
\\
#testcase-think-table-of-verb-checks-vc-war-wit-rule
>think
You can learn WAR WIT once you are no longer in the depths of despair.

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.00, 0.00.)

>war wit
by one point

@all,rej
{--rej}#testcase-check-vc-war-wit-rule-fallthrough
WRONG

@rej
#+testcase-think-table-of-verb-checks-vc-war-wit-rule
>think
You can learn WAR WIT now you are no longer in the depths of despair.

@all
Woe Wall
\\
#testcase-run-vr-war-wit-rule-default
Yes! You see what to do, now. You make believe you still have the soldier toys and see the right strategy for repelling the enemy. They'll be toast now.

@hint
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.00, -1.00.)

@!min
>mo maul
by one point

@all,rej
{--rej}#testcase-check-vc-mo-maul-rule-fallthrough
{--all}#testcase-run-vr-mo-maul-rule-default
BZZT Change This

@hint
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.00, -1.00.)

@!min
>bro brawl
by one point

@all
#testcase-check-vc-bro-brawl-rule-fallthrough
#testcase-run-vr-bro-brawl-rule-default
BZZT Change This

@rej
#+testcase-think-table-of-verb-checks-vc-oh-all-rule
>think
You can cry OH ALL once-now you have full leadership skills.

@ha
#testcase-ha-half-table-of-verb-checks-28-all
>oh zall
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-28-oh
>zoh all
{$GREENCORE}

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (-1.00, -1.00.)

>oh all
by one point

@all,rej
{--rej}#testcase-check-vc-oh-all-rule-fallthrough
{--all}#testcase-run-vr-oh-all-rule-default
BZZT Change This

@ha
#testcase-ha-half-table-of-verb-checks-31-let-fret
>let zlight
{$GREENCORE}
\\
#+testcase-ha-half-table-of-verb-checks-31-let-fret
>fret zfright
{$GREENCORE}
\\
#testcase-ha-half-table-of-verb-checks-31-light-fright
>zlet light
{$GREENCORE}
\\
#+testcase-ha-half-table-of-verb-checks-31-light-fright
>zfret fright
{$GREENCORE}

@all,rej
{--all}#testcase-room-names-let-in-the-light-net-in-the-night
/^Set-in-the-Site Net in the Night$
\\
>fret fright
I'm going to be pedantic here and tell you not to throw out the small words.
\\
>let light
I'm going to be pedantic here and tell you not to throw out the small words.

@rej
#testcase-think-table-of-verb-checks-vc-let-light-rule
>think
The final solution is more than two words long. Add words so your action matches the room.
\\
#+testcase-check-vc-rick-ride-rule-if-player-is-in-forfeit-or-player-is-in-net-in-the-night
>rick ride
You're beyond the rick's help here. You must find a way out on your own.

@alt
#testcase-run-vr-let-light-rule-if-the-player's-command-includes-fright
>fret in the fright
You give up at the final moment. Too bad. But you still, like, learned lessons and stuff.
Your score just went up by one point.
*** SPOOKY SPITE, FLUKY FLIGHT ***
\\
>undo

@hin
>ll
The leet learner's display lights up and scrolls through LCD numbers which settle on the pair (0.00, 1.50.)

>let in the light
by one point

@all,rej
{--rej}#testcase-check-vc-let-light-rule-fallthrough
{--all}#testcase-run-vr-let-light-rule-default
{--all}#testcase-run-vr-let-light-rule-fallthrough
BZZT Change This
*** SPOOKY SPITE, FLUKY FLIGHT ***
